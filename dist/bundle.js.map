{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","javascripts/app.js"],"names":[],"mappingsfile":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n  Test code to generate a human player and an orc player\n */\nvar PlayerOne = new Gauntlet.Combatants.Human();\n\nPlayerOne.setWeapon(new WarAxe());\n\nPlayerOne.generateClass();  // This will be used for \"Surprise me\" option\n\n\nvar PlayerTwo = new Gauntlet.Combatants.Orc();\nPlayerTwo.generateClass();\nPlayerTwo.setWeapon(new BroadSword());\n\n\n\n\n/*\n  Test code to generate a spell\n */\nvar spell = new Gauntlet.SpellBook.Sphere();\n\n$(\".className\").click(function(e) {\n       if (e.target.closest('div').classList.contains(\"className\")) {\n     // if (e.target.parentNode.classList.contains(\"className\") || e.target.closest('className')) {\n       PlayerOne.class = this.querySelector('.btn__text').innerHTML;\n       console.log(this.querySelector('.btn__text').innerHTML);\n     }\n   })\n\n\n$('#weapon-select').click(function(e) {\n  if(e.target.parentNode.classList.contains('barehands') || e.target.closest(\".barehands\")){\n    PlayerOne.setWeapon(new Weapon());\n    console.log(PlayerOne);\n  } else if (e.target.parentNode.classList.contains('dagger') || e.target.closest(\".dagger\")){\n    PlayerOne.setWeapon(new Dagger());\n    console.log(PlayerOne);\n  } else if (e.target.parentNode.classList.contains('broadsword') || e.target.closest(\".broadsword\")){PlayerOne.setWeapon(new BroadSword());\n    console.log(PlayerOne);\n  } else if (e.target.parentNode.classList.contains('waraxe') || e.target.closest(\".waraxe\")){\n    PlayerOne.setWeapon(new WarAxe());\n    console.log(PlayerOne);\n  }\n  $(\"#readyToRumble\").show();\n})\n\n\n\n\n\n\n\n// Function to check p1 and p2 current health\nfunction checkHealth(){\n  // Checking to see if P1 is dead\n  pTwoAttack();\n  if (PlayerOne.health <= 0) {\n  loseGame();\n\n  }\n  // Checking to see if P2 is dead\n  else if (PlayerTwo.health <= 0){\n  winGame();\n  }\n  else {\n  console.log(\"p1\", PlayerOne );\n  console.log(\"p2\", PlayerTwo );\n  }\n\n}\n\n\n\n// Use if else statement to either call winGame, loseGame function, or calculate damage\nfunction pTwoAttack(){\n  p1RemHealth = PlayerOne.health -= PlayerTwo.weapon.damage;\n  pOneAttack(p1RemHealth);\n}\n\nfunction pOneAttack(p1RemHealth){\n  p2RemHealth = PlayerTwo.health -= PlayerOne.weapon.damage;\n\n  atkStrings(p1RemHealth, p2RemHealth);\n}\n\nfunction atkStrings(p1RemHealth, p2RemHealth){\n  p2AtkString = `${PlayerTwo.playerName} attacks with ${PlayerTwo.weapon} for ${PlayerTwo.weapon.damage} damage! and Health is ${p2RemHealth}`\n  p1AtkString = `${PlayerOne.name} attacks with ${PlayerOne.weapon} for ${PlayerOne.weapon.damage} damage! and Health is ${p1RemHealth}`\n  atkDisplay(p2AtkString, p1AtkString);\n}\n\nfunction atkDisplay(p2AtkString, p1AtkString){\n  p1Div = $(\"#playerOne\");\n  p2Div = $(\"#playerTwo\");\n  p1Div.html(p1AtkString);\n  p2Div.html(p2AtkString);\n}\n\n\nloseGame = function(){\n  $(\".attackButton\").hide();\n  p2AtkLoseString = `${PlayerTwo.playerName} has Defeated ${PlayerOne.name}`;\n  p1AtkLoseString = `${\"\"}`;\n  atkDisplay(p2AtkLoseString, p1AtkLoseString);\n  //alert(`${PlayerTwo.playerName} Wins the Game\"`);\n}\n\n\n\nwinGame = function (){\n $(\".attackButton\").hide();\n p2AtkWinString = `${\"\"}`;\n p1AtkWinString = `${PlayerOne.name} has Defeated ${PlayerTwo.playerName}`;\n atkDisplay(p2AtkWinString, p1AtkWinString);\n //alert(`${PlayerOne.name} Wins the Game`);\n}\n\n  // Grab value from input for Player Name on click of anchor element \"Select Class\"\n\n  $('#setName').click(function(){\n    PlayerOne.name = $('#player-name').val();\n  });\n\n  $(\"#class-select\").click(function(e) {\n    if (e.target.parentNode.classList.contains(\"className\")) {\n      PlayerOne.class = e.target.innerHTML;\n    }\n  })\n\n\n  /*\n    Show the initial view that accepts player name\n    but hides the enter battleground button and battlefield\n   */\n  $(\"#player-setup\").show();\n  $(\"#readyToRumble\").hide();\n  $(\"#battleground\").hide();\n\n  /*\n    When any button with card__link class is clicked,\n    move on to the next view.\n   */\n  $(\".card__link\").click(function(e) {\n    var nextCard = $(this).attr(\"next\");\n    console.log(\"next\", nextCard );\n    var moveAlong = false;\n\n    switch (nextCard) {\n      case \"card--class\":\n        moveAlong = ($(\"#player-name\").val() !== \"\");\n        console.log(\"cardClass\", moveAlong );\n        break;\n      case \"card--weapon\":\n        moveAlong = ($(\"#player-name\").val() !== \"\");\n        console.log(\"cardWeapon\", moveAlong );\n        break;\n      case \"card--battleground\":\n        moveAlong = ($(\"#player-name\").val() !== \"\");\n        break;\n    }\n\n    if (moveAlong) {\n      $(\".card\").hide();\n      $(\".\" + nextCard).show();\n    }\n  });\n\n  /*\n    When the back button clicked, move back a view\n   */\n  $(\".card__back\").click(function(e) {\n    var previousCard = $(this).attr(\"previous\");\n    $(\".card\").hide();\n    $(\".\" + previousCard).show();\n  });\n\n  $(\"#readyToRumble\").click(function() {\n    $(\"#readyToRumble\").hide();\n    $(\"#weapon-select\").hide();\n    $(\"#battleground\").show();\n  });\n\n  $(\"#attackButton\").click(function() {\n    checkHealth();\n  })\n\n\n// checkHealth();\n\n\n\n\n\n\n\n// });"]}