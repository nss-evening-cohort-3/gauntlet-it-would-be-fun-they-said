{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","javascripts/app.js","javascripts/classes.js","javascripts/enemies.js","javascripts/main.js","javascripts/player.js","javascripts/spells.js","javascripts/weapons.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjrjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n  Test code to generate a human player and an orc player\n */\nvar PlayerOne = new Gauntlet.Combatants.Human();\nPlayerOne.setWeapon(new WarAxe());\nPlayerOne.generateClass();  // This will be used for \"Surprise me\" option\nconsole.log(\"p1\", PlayerOne.toString());\n\nvar PlayerTwo = new Gauntlet.Combatants.Orc();\nPlayerTwo.generateClass();\nPlayerTwo.setWeapon(new BroadSword());\nconsole.log(\"p2\", PlayerTwo.toString());\n\n/*\n  Test code to generate a spell\n */\nvar spell = new Gauntlet.SpellBook.Sphere();\nconsole.log(\"spell: \", spell.toString());\n\n\n$(document).ready(function() {\n  // Grab value from input for Player Name on click of anchor element \"Select Class\"\n  $('#setName').click(function(){\n    PlayerOne.name = $('#player-name').val();\n});\n\n\n  /*\n    Show the initial view that accepts player name\n   */\n  $(\"#player-setup\").show();\n\n  /*\n    When any button with card__link class is clicked,\n    move on to the next view.\n   */\n  $(\".card__link\").click(function(e) {\n    var nextCard = $(this).attr(\"next\");\n    // console.log(\"next\", nextCard );\n    var moveAlong = null;\n\n    switch (nextCard) {\n      case \"card--class\":\n        moveAlong = ($(\"#player-name\").val() !== \"\");\n        break;\n      case \"card--weapon\":\n        moveAlong = ($(\"#player-name\").val() !== \"\");\n        break;\n    }\n\n    if (moveAlong) {\n      $(\".card\").hide();\n      $(\".\" + nextCard).show();\n    }\n  });\n\n  /*\n    When the back button clicked, move back a view\n   */\n  $(\".card__back\").click(function(e) {\n    var previousCard = $(this).attr(\"previous\");\n    $(\".card\").hide();\n    $(\".\" + previousCard).show();\n  });\n\n});","/*\n  TODO: Modularize this code with IIFE or Browserify\n */\nvar Gauntlet = Gauntlet || {};\nGauntlet.GuildHall = {};\n\n/*\n  Base function for a player, or enemy, class (profession)\n */\nGauntlet.GuildHall.PlayerClass = function() {\n  this.name = \"Beggar\";\n  this.healthBonus = 0;\n  this.strengthBonus = 0;\n  this.intelligenceBonus = 0;\n  this.magical = false;\n\n  this.toString = function() {\n    return this.name;\n  }\n};\n\n/*\n    FIGHTER CLASSES\n      - Warrior\n      - Valkyrie\n      - Berserker\n      - Monk\n */\nGauntlet.GuildHall.Fighter = function() {\n  this.healthBonus = 20;\n  this.strengthBonus = 10;\n};\nGauntlet.GuildHall.Fighter.prototype = new Gauntlet.GuildHall.PlayerClass();\n\n\nGauntlet.GuildHall.Warrior = function() {\n  this.name = \"Warrior\";\n  this.healthBonus = this.healthBonus + 25;\n  this.strengthBonus = this.strengthBonus + 30;\n};\nGauntlet.GuildHall.Warrior.prototype = new Gauntlet.GuildHall.Fighter();\n\n\nGauntlet.GuildHall.Valkyrie = function() {\n  this.name = \"Valkyrie\";\n  this.healthBonus = this.healthBonus + 20;\n  this.strengthBonus = this.strengthBonus + 10;\n};\nGauntlet.GuildHall.Valkyrie.prototype = new Gauntlet.GuildHall.Fighter();\n\n\nGauntlet.GuildHall.Berserker = function() {\n  this.name = \"Berserker\";\n  this.healthBonus = this.healthBonus + 35;\n  this.strengthBonus = this.strengthBonus + 20;\n};\nGauntlet.GuildHall.Berserker.prototype = new Gauntlet.GuildHall.Fighter();\n\n\nGauntlet.GuildHall.Monk = function() {\n  this.name = \"Monk\";\n  this.healthBonus = this.healthBonus + 10;\n  this.strengthBonus = this.strengthBonus + 40;\n};\nGauntlet.GuildHall.Monk.prototype = new Gauntlet.GuildHall.Fighter();\n\n\n/*\n    MAGICAL CLASSES\n      - Shaman\n      - Wizard\n      - Conujurer\n      - Sorcerer\n */\nGauntlet.GuildHall.Mage = function() {\n  this.name = \"Mage\";\n  this.magical = true;\n  this.healthBonus = this.healthBonus - 10;\n  this.strengthBonus = this.strengthBonus - 20;\n  this.intelligenceBonus = this.intelligenceBonus + 20;\n};\nGauntlet.GuildHall.Mage.prototype = new Gauntlet.GuildHall.PlayerClass();\n\n\nGauntlet.GuildHall.Shaman = function() {\n  this.name = \"Shaman\";\n  this.healthBonus = this.healthBonus + 5;\n  this.strengthBonus = this.strengthBonus - 10;\n  this.intelligenceBonus = this.intelligenceBonus + 20;\n};\nGauntlet.GuildHall.Shaman.prototype = new Gauntlet.GuildHall.Mage();\n\n\nGauntlet.GuildHall.Wizard = function() {\n  this.name = \"Wizard\";\n  this.healthBonus = this.healthBonus - 15;\n  this.strengthBonus = this.strengthBonus - 25;\n  this.intelligenceBonus = this.intelligenceBonus + 40;\n};\nGauntlet.GuildHall.Wizard.prototype = new Gauntlet.GuildHall.Mage();\n\n\nGauntlet.GuildHall.Conjurer = function() {\n  this.name = \"Conjurer\";\n  this.strengthBonus = this.strengthBonus - 10;\n  this.intelligenceBonus = this.intelligenceBonus + 10;\n};\nGauntlet.GuildHall.Conjurer.prototype = new Gauntlet.GuildHall.Mage();\n\n\nGauntlet.GuildHall.Sorcerer = function() {\n  this.name = \"Sorcerer\";\n  this.healthBonus = this.healthBonus - 5;\n  this.strengthBonus = this.strengthBonus - 20;\n  this.intelligenceBonus = this.intelligenceBonus + 30;\n};\nGauntlet.GuildHall.Sorcerer.prototype = new Gauntlet.GuildHall.Mage();\n\n\n/*\n    STEALTH CLASSES\n      - Thief\n      - Ninja\n      - Assassin\n */\n\nGauntlet.GuildHall.Stealth = function() {\n  this.name = \"Stealth\";\n  this.magical = true;\n  this.healthBonus = this.healthBonus - 10;\n  this.strengthBonus = this.strengthBonus - 20;\n  this.intelligenceBonus = this.intelligenceBonus + 20;\n};\nGauntlet.GuildHall.Stealth.prototype = new Gauntlet.GuildHall.PlayerClass();\n\nGauntlet.GuildHall.Thief = function() {\n  this.name = \"Thief\";\n  this.strengthBonus = this.strengthBonus - 10;\n  this.intelligenceBonus = this.intelligenceBonus + 10;\n};\nGauntlet.GuildHall.Thief.prototype = new Gauntlet.GuildHall.Stealth();\n\nGauntlet.GuildHall.Ninja = function() {\n  this.name = \"Ninja\";\n  this.strengthBonus = this.strengthBonus - 10;\n  this.intelligenceBonus = this.intelligenceBonus + 10;\n};\nGauntlet.GuildHall.Ninja.prototype = new Gauntlet.GuildHall.Stealth();\n\nGauntlet.GuildHall.Assassin = function() {\n  this.name = \"Assassin\";\n  this.strengthBonus = this.strengthBonus - 10;\n  this.intelligenceBonus = this.intelligenceBonus + 10;\n};\nGauntlet.GuildHall.Assassin.prototype = new Gauntlet.GuildHall.Stealth();\n\n","Gauntlet.Combatants.Orc = function() {\n  this.health = this.health + 20;\n  this.playerName = \"Gobbledeegook\"\n  this.species = \"Orc\";\n  this.allowedClasses = [\"Warrior\", \"Berserker\", \"Shaman\"];\n\n  this.generateClass = function() {\n    // Get a random index from the allowed classes array\n    var random = Math.round(Math.random() * (this.allowedClasses.length - 1));\n\n    // Get the string at the index\n    var randomClass = this.allowedClasses[random];\n\n    // Composes the corresponding player class into the player object\n    this.class = new Gauntlet.GuildHall[randomClass]();\n    return this.class;\n  }\n};\n\nGauntlet.Combatants.Orc.prototype = new Gauntlet.Combatants.Monster();\n\n","\nvar app = require('./app');\nvar classes = require('./classes');\nvar enemies = require('./enemies');\nvar spells = require('./spells');\nvar player = require('./player');\nvar weapons = require('./weapons');\n\n","/*\n  TODO: Modularize this code with IIFE or Browserify\n */\nvar Gauntlet = Gauntlet || {};\nGauntlet.Combatants = {};\n\n/*\n  Define the base object for any player of Gauntlet,\n  whether a human player or a monster.\n */\nGauntlet.Combatants.Player = function(name) {\n  this.species = null;\n  this.class = null;\n  this.weapon = null;\n\n  this.playerName = name || \"unknown adventurer\";\n  this.health = Math.floor(Math.random() * 40 + 50);\n  this.limbs = [\"head\", \"neck\", \"arm\", \"leg\", \"torso\"];\n  this.skinColor = \"gray\";\n  this.skinColors = [this.skinColor];\n  this.strength = 90;\n  this.intelligence = 90;\n\n  this.toString = function() {\n    var output = [this.playerName,\n      \": a \",\n      this.skinColor,\n      \" skinned \",\n      this.species,\n      \" \",\n      this.class,\n      \" with \",\n      this.health,\n      \" health. \",\n      (this.class.magical) ? \"Able to cast \" : \" Wielding a \",\n      this.weapon.toString(),\n      \"!\"\n    ].join(\"\");\n    return output;\n  };\n};\n\nGauntlet.Combatants.Player.prototype.setWeapon = function(newWeapon) {\n  this.weapon = newWeapon;\n}\n\nGauntlet.Combatants.Player.prototype.generateClass = function() {\n  // Get a random index from the allowed classes array\n  var random = Math.round(Math.random() * (this.allowedClasses.length - 1));\n\n  // Get the string at the index\n  var randomClass = this.allowedClasses[random];\n\n  // Composes the corresponding player class into the player object\n  this.class = new Gauntlet.GuildHall[randomClass]();\n\n  // Add the health bonus\n  this.health += this.class.healthBonus;\n  return this.class;\n};\n\n/*\n  Define the base properties for a human in a \n  constructor function.\n */\nGauntlet.Combatants.Human = function() {\n  var randomSkin;\n\n  this.species = \"Human\";\n  this.intelligence = this.intelligence + 20;\n\n  this.skinColors.push(\"brown\", \"red\", \"white\", \"disease\");\n  randomSkin = Math.round(Math.random() * (this.skinColors.length-1));\n  this.skinColor = this.skinColors[randomSkin];\n\n  this.allowedClasses = [\"Warrior\", \"Berserker\", \"Valkyrie\", \"Monk\", \"Wizard\", \"Shaman\", \"Conjurer\", \"Sorcerer\", \"Thief\", \"Ninja\", \"Assassin\"];\n};\nGauntlet.Combatants.Human.prototype = new Gauntlet.Combatants.Player();\n\n\n/*\n  Define the base properties for a monster in a \n  constructor function.\n */\nGauntlet.Combatants.Monster = function() {\n  this.health = this.health - 30;\n  this.intelligence = this.intelligence -20;\n  this.strength = this.strength + 30;\n};\n\nGauntlet.Combatants.Monster.prototype = new Gauntlet.Combatants.Player();\n\n","/*\n  TODO: Modularize this code with IIFE or Browserify\n */\nvar Gauntlet = Gauntlet || {};\nGauntlet.SpellBook = {};\n\n\n/*\n  Base spell function that defines name, damage, damage type\n */\nGauntlet.SpellBook.Spell = function() {\n  this.name = \"\";\n  this.damage = 0;\n\n  this.damageTypes = [\"lightning\", \"fire\", \"water\", \"earth\", \"mysticism\"];\n  this.type = \"\";\n\n  this.toString = function() {\n    return this.name + \" of \" + this.type + \" for \" + this.damage + \" damage!\";\n  }\n};\n\n/*\n  An elemental sphere that can be cast by a magical class\n */\nGauntlet.SpellBook.Sphere = function() {\n  this.name = \"sphere\";\n  this.damage = Math.floor(Math.random() * 10 + 10);\n\n  var random = Math.round(Math.random() * (this.damageTypes.length - 1));\n  this.type = this.damageTypes[random];\n};\nGauntlet.SpellBook.Sphere.prototype = new Gauntlet.SpellBook.Spell();\n","var Weapon = function() {\n  this.name = \"bare hands\";\n  this.damage = 1;\n  this.hands = 2;\n\n  this.toString = function() {\n    return this.name;\n  }\n};\n\nvar Dagger = function() {\n  this.name = \"dagger\";\n  this.damage = 4;\n  this.hands = 1;\n};\nDagger.prototype = new Weapon();\n\nvar BroadSword = function() {\n  this.name = \"broad sword\";\n  this.damage = 14;\n  this.hands = 2;\n};\nBroadSword.prototype = new Weapon();\n\nvar WarAxe = function() {\n  this.name = \"war axe\";\n  this.damage = 18;\n  this.hands = 2;\n};\nWarAxe.prototype = new Weapon();\n\n"]}